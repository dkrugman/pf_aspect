name: Publish picframe to PyPI / GitHub

on:
  push:
    tags:
      - "2*"

jobs:
  build-n-publish:
    name: Build and publish to PyPi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/picframe
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Build source and wheel distributions
        run: |
          python -m pip install --upgrade pip build twine
          python -m build
          twine check --strict dist/*

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3.7.0
        with:
          failOnError: true
          commitMode: true
          configuration: ".github/workflows/config/release-notes-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.github_release.outputs.changelog}}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      - name: Get Asset name
        run: |
          export PKG=$(ls dist/ | grep tar)
          set -- $PKG
          echo "name=$1" >> $GITHUB_ENV
      - name: Upload Release Asset (sdist) to GitHub
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.name }}
          asset_name: ${{ env.name }}
          asset_content_type: application/zip
